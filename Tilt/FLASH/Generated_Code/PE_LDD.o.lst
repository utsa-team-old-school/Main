   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PE_LDD.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PE_LDD_DeviceDataList
  18              		.section	.bss.PE_LDD_DeviceDataList,"aw",%nobits
  19              		.align	2
  22              	PE_LDD_DeviceDataList:
  23 0000 00000000 		.space	40
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	PE_CpuClockConfigurations
  25              		.section	.rodata.PE_CpuClockConfigurations,"a",%progbits
  26              		.align	2
  29              	PE_CpuClockConfigurations:
  30 0000 006CDC02 		.word	48000000
  31 0004 00366E01 		.word	24000000
  32 0008 00000000 		.word	0
  33 000c 00000000 		.word	0
  34 0010 00000000 		.word	0
  35 0014 00366E01 		.word	24000000
  36 0018 80841E00 		.word	2000000
  37 001c 00127A00 		.word	8000000
  38 0020 00000000 		.word	0
  39 0024 127A0000 		.word	31250
  40              		.section	.text.PE_FillMemory,"ax",%progbits
  41              		.align	2
  42              		.global	PE_FillMemory
  43              		.code	16
  44              		.thumb_func
  46              	PE_FillMemory:
  47              	.LFB0:
  48              		.file 1 "../Generated_Code/PE_LDD.c"
   1:../Generated_Code/PE_LDD.c **** /** ###################################################################
   2:../Generated_Code/PE_LDD.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/PE_LDD.c **** **     Filename    : PE_LDD.c
   4:../Generated_Code/PE_LDD.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/PE_LDD.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/PE_LDD.c **** **     Version     : Component 01.025, Driver 01.04, CPU db: 3.00.000
   7:../Generated_Code/PE_LDD.c **** **     Compiler    : GNU C Compiler
   8:../Generated_Code/PE_LDD.c **** **     Date/Time   : 2019-04-18, 08:58, # CodeGen: 70
   9:../Generated_Code/PE_LDD.c **** **     Abstract    :
  10:../Generated_Code/PE_LDD.c **** **
  11:../Generated_Code/PE_LDD.c **** **     Settings    :
  12:../Generated_Code/PE_LDD.c **** **
  13:../Generated_Code/PE_LDD.c **** **
  14:../Generated_Code/PE_LDD.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  15:../Generated_Code/PE_LDD.c **** **     All Rights Reserved.
  16:../Generated_Code/PE_LDD.c **** **     
  17:../Generated_Code/PE_LDD.c **** **     Redistribution and use in source and binary forms, with or without modification,
  18:../Generated_Code/PE_LDD.c **** **     are permitted provided that the following conditions are met:
  19:../Generated_Code/PE_LDD.c **** **     
  20:../Generated_Code/PE_LDD.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  21:../Generated_Code/PE_LDD.c **** **       of conditions and the following disclaimer.
  22:../Generated_Code/PE_LDD.c **** **     
  23:../Generated_Code/PE_LDD.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  24:../Generated_Code/PE_LDD.c **** **       list of conditions and the following disclaimer in the documentation and/or
  25:../Generated_Code/PE_LDD.c **** **       other materials provided with the distribution.
  26:../Generated_Code/PE_LDD.c **** **     
  27:../Generated_Code/PE_LDD.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  28:../Generated_Code/PE_LDD.c **** **       contributors may be used to endorse or promote products derived from this
  29:../Generated_Code/PE_LDD.c **** **       software without specific prior written permission.
  30:../Generated_Code/PE_LDD.c **** **     
  31:../Generated_Code/PE_LDD.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  32:../Generated_Code/PE_LDD.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  33:../Generated_Code/PE_LDD.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  34:../Generated_Code/PE_LDD.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  35:../Generated_Code/PE_LDD.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  36:../Generated_Code/PE_LDD.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  37:../Generated_Code/PE_LDD.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  38:../Generated_Code/PE_LDD.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  39:../Generated_Code/PE_LDD.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  40:../Generated_Code/PE_LDD.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  41:../Generated_Code/PE_LDD.c **** **     
  42:../Generated_Code/PE_LDD.c **** **     http: www.freescale.com
  43:../Generated_Code/PE_LDD.c **** **     mail: support@freescale.com
  44:../Generated_Code/PE_LDD.c **** ** ###################################################################*/
  45:../Generated_Code/PE_LDD.c **** /*!
  46:../Generated_Code/PE_LDD.c **** ** @file PE_LDD.c                                                  
  47:../Generated_Code/PE_LDD.c **** ** @version 01.04
  48:../Generated_Code/PE_LDD.c **** ** @brief
  49:../Generated_Code/PE_LDD.c **** **
  50:../Generated_Code/PE_LDD.c **** */         
  51:../Generated_Code/PE_LDD.c **** /*!
  52:../Generated_Code/PE_LDD.c **** **  @addtogroup PE_LDD_module PE_LDD module documentation
  53:../Generated_Code/PE_LDD.c **** **  @{
  54:../Generated_Code/PE_LDD.c **** */         
  55:../Generated_Code/PE_LDD.c **** 
  56:../Generated_Code/PE_LDD.c **** /* MODULE PE_LDD. */
  57:../Generated_Code/PE_LDD.c **** 
  58:../Generated_Code/PE_LDD.c **** /* {Default RTOS Adapter} No RTOS includes */
  59:../Generated_Code/PE_LDD.c **** /* {Default RTOS Adapter} No RTOS driver includes */
  60:../Generated_Code/PE_LDD.c **** 
  61:../Generated_Code/PE_LDD.c **** #include "PE_LDD.h"
  62:../Generated_Code/PE_LDD.c **** #include "Cpu.h"
  63:../Generated_Code/PE_LDD.c **** 
  64:../Generated_Code/PE_LDD.c **** /*lint -esym(765,PE_PeripheralUsed,LDD_SetClockConfiguration,PE_CpuClockConfigurations,PE_FillMemor
  65:../Generated_Code/PE_LDD.c **** 
  66:../Generated_Code/PE_LDD.c **** /*
  67:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  68:../Generated_Code/PE_LDD.c **** ** Array of initialized device structures of LDD components.
  69:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  70:../Generated_Code/PE_LDD.c **** */
  71:../Generated_Code/PE_LDD.c **** LDD_TDeviceData *PE_LDD_DeviceDataList[10] = {
  72:../Generated_Code/PE_LDD.c ****     NULL,
  73:../Generated_Code/PE_LDD.c ****     NULL,
  74:../Generated_Code/PE_LDD.c ****     NULL,
  75:../Generated_Code/PE_LDD.c ****     NULL,
  76:../Generated_Code/PE_LDD.c ****     NULL,
  77:../Generated_Code/PE_LDD.c ****     NULL,
  78:../Generated_Code/PE_LDD.c ****     NULL,
  79:../Generated_Code/PE_LDD.c ****     NULL,
  80:../Generated_Code/PE_LDD.c ****     NULL,
  81:../Generated_Code/PE_LDD.c ****     NULL
  82:../Generated_Code/PE_LDD.c ****   };
  83:../Generated_Code/PE_LDD.c **** 
  84:../Generated_Code/PE_LDD.c **** /*
  85:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  86:../Generated_Code/PE_LDD.c **** ** The array of clock frequencies in configured clock configurations.
  87:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  88:../Generated_Code/PE_LDD.c **** */
  89:../Generated_Code/PE_LDD.c **** /*! The array of clock configurations (frequencies) configured in configured clock configurations o
  90:../Generated_Code/PE_LDD.c **** const TCpuClockConfiguration PE_CpuClockConfigurations[CPU_CLOCK_CONFIG_NUMBER] = {
  91:../Generated_Code/PE_LDD.c ****   /* Clock configuration 0 */
  92:../Generated_Code/PE_LDD.c ****   {
  93:../Generated_Code/PE_LDD.c ****     CPU_CORE_CLK_HZ_CONFIG_0,          /*!< Core clock frequency in clock configuration 0 */
  94:../Generated_Code/PE_LDD.c ****     CPU_BUS_CLK_HZ_CONFIG_0,           /*!< Bus clock frequency in clock configuration 0 */
  95:../Generated_Code/PE_LDD.c ****     CPU_FLEXBUS_CLK_HZ_CONFIG_0,       /*!< Flexbus clock frequency in clock configuration 0 */
  96:../Generated_Code/PE_LDD.c ****     CPU_FLASH_CLK_HZ_CONFIG_0,         /*!< FLASH clock frequency in clock configuration 0 */
  97:../Generated_Code/PE_LDD.c ****     CPU_USB_CLK_HZ_CONFIG_0,           /*!< USB clock frequency in clock configuration 0 */
  98:../Generated_Code/PE_LDD.c ****     CPU_PLL_FLL_CLK_HZ_CONFIG_0,       /*!< PLL/FLL clock frequency in clock configuration 0 */
  99:../Generated_Code/PE_LDD.c ****     CPU_MCGIR_CLK_HZ_CONFIG_0,         /*!< MCG internal reference clock frequency in clock configu
 100:../Generated_Code/PE_LDD.c ****     CPU_OSCER_CLK_HZ_CONFIG_0,         /*!< System OSC external reference clock frequency in clock 
 101:../Generated_Code/PE_LDD.c ****     CPU_ERCLK32K_CLK_HZ_CONFIG_0,      /*!< External reference clock 32k frequency in clock configu
 102:../Generated_Code/PE_LDD.c ****     CPU_MCGFF_CLK_HZ_CONFIG_0          /*!< MCG fixed frequency clock */
 103:../Generated_Code/PE_LDD.c ****   }
 104:../Generated_Code/PE_LDD.c **** };
 105:../Generated_Code/PE_LDD.c **** 
 106:../Generated_Code/PE_LDD.c **** /*
 107:../Generated_Code/PE_LDD.c **** ** ===================================================================
 108:../Generated_Code/PE_LDD.c **** **     Method      :  Cpu_PE_FillMemory (component MKL25Z128LK4)
 109:../Generated_Code/PE_LDD.c **** */
 110:../Generated_Code/PE_LDD.c **** /*!
 111:../Generated_Code/PE_LDD.c **** **     @brief
 112:../Generated_Code/PE_LDD.c **** **         Fills a memory area block by a specified value.
 113:../Generated_Code/PE_LDD.c **** **     @param
 114:../Generated_Code/PE_LDD.c **** **       SourceAddressPtr - Source address pointer.
 115:../Generated_Code/PE_LDD.c **** **     @param
 116:../Generated_Code/PE_LDD.c **** **       c - A value used to fill a memory block.
 117:../Generated_Code/PE_LDD.c **** **     @param
 118:../Generated_Code/PE_LDD.c **** **       len - Length of a memory block to fill.
 119:../Generated_Code/PE_LDD.c **** */
 120:../Generated_Code/PE_LDD.c **** /* ===================================================================*/
 121:../Generated_Code/PE_LDD.c **** void PE_FillMemory(register void* SourceAddressPtr, register uint8_t c, register uint32_t len)
 122:../Generated_Code/PE_LDD.c **** {
  49              		.loc 1 122 0
  50              		.cfi_startproc
  51 0000 90B5     		push	{r4, r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 12
  54              		.cfi_offset 4, -12
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 00AF     		add	r7, sp, #0
  58              	.LCFI1:
  59              		.cfi_def_cfa_register 7
  60 0004 131C     		mov	r3, r2
 123:../Generated_Code/PE_LDD.c ****   register uint8_t *ptr = (uint8_t*)SourceAddressPtr;
  61              		.loc 1 123 0
  62 0006 041C     		mov	r4, r0
 124:../Generated_Code/PE_LDD.c **** 
 125:../Generated_Code/PE_LDD.c ****   if (len > 0U) {
  63              		.loc 1 125 0
  64 0008 002B     		cmp	r3, #0
  65 000a 0AD0     		beq	.L1
 126:../Generated_Code/PE_LDD.c ****     while (len--) {
  66              		.loc 1 126 0
  67 000c 02E0     		b	.L3
  68              	.L4:
 127:../Generated_Code/PE_LDD.c ****       *ptr++ = c;
  69              		.loc 1 127 0
  70 000e 0A1C     		add	r2, r1, #0
  71 0010 2270     		strb	r2, [r4]
  72 0012 0134     		add	r4, r4, #1
  73              	.L3:
 126:../Generated_Code/PE_LDD.c ****     while (len--) {
  74              		.loc 1 126 0
  75 0014 1A1C     		mov	r2, r3
  76 0016 501E     		sub	r0, r2, #1
  77 0018 8241     		sbc	r2, r2, r0
  78 001a D2B2     		uxtb	r2, r2
  79 001c 013B     		sub	r3, r3, #1
  80 001e 002A     		cmp	r2, #0
  81 0020 F5D1     		bne	.L4
  82              	.L1:
 128:../Generated_Code/PE_LDD.c ****     }
 129:../Generated_Code/PE_LDD.c ****   }
 130:../Generated_Code/PE_LDD.c **** }
  83              		.loc 1 130 0
  84 0022 BD46     		mov	sp, r7
  85              		@ sp needed for prologue
  86 0024 90BD     		pop	{r4, r7, pc}
  87              		.cfi_endproc
  88              	.LFE0:
  90 0026 C046     		.section	.text.PE_PeripheralUsed,"ax",%progbits
  91              		.align	2
  92              		.global	PE_PeripheralUsed
  93              		.code	16
  94              		.thumb_func
  96              	PE_PeripheralUsed:
  97              	.LFB1:
 131:../Generated_Code/PE_LDD.c **** 
 132:../Generated_Code/PE_LDD.c **** /*
 133:../Generated_Code/PE_LDD.c **** ** ===================================================================
 134:../Generated_Code/PE_LDD.c **** **     Method      :  Cpu_PE_PeripheralUsed (component MKL25Z128LK4)
 135:../Generated_Code/PE_LDD.c **** */
 136:../Generated_Code/PE_LDD.c **** /*!
 137:../Generated_Code/PE_LDD.c **** **     @brief
 138:../Generated_Code/PE_LDD.c **** **         Returns information whether a peripheral is allocated by PEx 
 139:../Generated_Code/PE_LDD.c **** **         or not.
 140:../Generated_Code/PE_LDD.c **** **     @param
 141:../Generated_Code/PE_LDD.c **** **       PrphBaseAddress - Base address of a peripheral.
 142:../Generated_Code/PE_LDD.c **** **     @return
 143:../Generated_Code/PE_LDD.c **** **       TRUE if a peripheral is used by PEx or FALSE if it isn't used.
 144:../Generated_Code/PE_LDD.c **** */
 145:../Generated_Code/PE_LDD.c **** /* ===================================================================*/
 146:../Generated_Code/PE_LDD.c **** bool PE_PeripheralUsed(uint32_t PrphBaseAddress)
 147:../Generated_Code/PE_LDD.c **** {
  98              		.loc 1 147 0
  99              		.cfi_startproc
 100 0000 80B5     		push	{r7, lr}
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 84B0     		sub	sp, sp, #16
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 7
 111 0006 7860     		str	r0, [r7, #4]
 148:../Generated_Code/PE_LDD.c ****   bool result = FALSE;
 112              		.loc 1 148 0
 113 0008 3B1C     		mov	r3, r7
 114 000a 0F33     		add	r3, r3, #15
 115 000c 0022     		mov	r2, #0
 116 000e 1A70     		strb	r2, [r3]
 149:../Generated_Code/PE_LDD.c **** 
 150:../Generated_Code/PE_LDD.c ****   switch (PrphBaseAddress) {
 117              		.loc 1 150 0
 118 0010 7B68     		ldr	r3, [r7, #4]
 119 0012 114A     		ldr	r2, .L11
 120 0014 9342     		cmp	r3, r2
 121 0016 12D0     		beq	.L7
 122 0018 0F4A     		ldr	r2, .L11
 123 001a 9342     		cmp	r3, r2
 124 001c 06D8     		bhi	.L8
 125 001e 0F4A     		ldr	r2, .L11+4
 126 0020 9342     		cmp	r3, r2
 127 0022 0CD0     		beq	.L7
 128 0024 0E4A     		ldr	r2, .L11+8
 129 0026 9342     		cmp	r3, r2
 130 0028 09D0     		beq	.L7
 131 002a 0DE0     		b	.L6
 132              	.L8:
 133 002c 0D4A     		ldr	r2, .L11+12
 134 002e 9342     		cmp	r3, r2
 135 0030 05D0     		beq	.L7
 136 0032 0D4A     		ldr	r2, .L11+16
 137 0034 9342     		cmp	r3, r2
 138 0036 02D0     		beq	.L7
 139 0038 0C4A     		ldr	r2, .L11+20
 140 003a 9342     		cmp	r3, r2
 141 003c 04D1     		bne	.L6
 142              	.L7:
 151:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) UART0 */
 152:../Generated_Code/PE_LDD.c ****     case 0x4006A000UL:
 153:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) TPM0 */
 154:../Generated_Code/PE_LDD.c ****     case 0x40038000UL:
 155:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) PTA */
 156:../Generated_Code/PE_LDD.c ****     case 0x400FF000UL:
 157:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) PTE */
 158:../Generated_Code/PE_LDD.c ****     case 0x400FF100UL:
 159:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) PTB */
 160:../Generated_Code/PE_LDD.c ****     case 0x400FF040UL:
 161:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) PTC */
 162:../Generated_Code/PE_LDD.c ****     case 0x400FF080UL:
 163:../Generated_Code/PE_LDD.c ****       result = TRUE;
 143              		.loc 1 163 0
 144 003e 3B1C     		mov	r3, r7
 145 0040 0F33     		add	r3, r3, #15
 146 0042 0122     		mov	r2, #1
 147 0044 1A70     		strb	r2, [r3]
 164:../Generated_Code/PE_LDD.c ****       break;
 148              		.loc 1 164 0
 149 0046 00E0     		b	.L9
 150              	.L6:
 165:../Generated_Code/PE_LDD.c ****     default:
 166:../Generated_Code/PE_LDD.c ****       break;
 151              		.loc 1 166 0
 152 0048 C046     		mov	r8, r8
 153              	.L9:
 167:../Generated_Code/PE_LDD.c ****   }
 168:../Generated_Code/PE_LDD.c ****   return result;
 154              		.loc 1 168 0
 155 004a 3B1C     		mov	r3, r7
 156 004c 0F33     		add	r3, r3, #15
 157 004e 1B78     		ldrb	r3, [r3]
 169:../Generated_Code/PE_LDD.c **** }
 158              		.loc 1 169 0
 159 0050 181C     		mov	r0, r3
 160 0052 BD46     		mov	sp, r7
 161 0054 04B0     		add	sp, sp, #16
 162              		@ sp needed for prologue
 163 0056 80BD     		pop	{r7, pc}
 164              	.L12:
 165              		.align	2
 166              	.L11:
 167 0058 00F00F40 		.word	1074786304
 168 005c 00800340 		.word	1073971200
 169 0060 00A00640 		.word	1074176000
 170 0064 80F00F40 		.word	1074786432
 171 0068 00F10F40 		.word	1074786560
 172 006c 40F00F40 		.word	1074786368
 173              		.cfi_endproc
 174              	.LFE1:
 176              		.section	.text.LDD_SetClockConfiguration,"ax",%progbits
 177              		.align	2
 178              		.global	LDD_SetClockConfiguration
 179              		.code	16
 180              		.thumb_func
 182              	LDD_SetClockConfiguration:
 183              	.LFB2:
 170:../Generated_Code/PE_LDD.c **** 
 171:../Generated_Code/PE_LDD.c **** /*
 172:../Generated_Code/PE_LDD.c **** ** ===================================================================
 173:../Generated_Code/PE_LDD.c **** **     Method      :  Cpu_LDD_SetClockConfiguration (component MKL25Z128LK4)
 174:../Generated_Code/PE_LDD.c **** */
 175:../Generated_Code/PE_LDD.c **** /*!
 176:../Generated_Code/PE_LDD.c **** **     @brief
 177:../Generated_Code/PE_LDD.c **** **         Changes the clock configuration of all LDD components in a 
 178:../Generated_Code/PE_LDD.c **** **         project.
 179:../Generated_Code/PE_LDD.c **** **     @param
 180:../Generated_Code/PE_LDD.c **** **       ClockConfiguration - New CPU clock configuration changed by CPU SetClockConfiguration meth
 181:../Generated_Code/PE_LDD.c **** */
 182:../Generated_Code/PE_LDD.c **** /* ===================================================================*/
 183:../Generated_Code/PE_LDD.c **** void LDD_SetClockConfiguration(LDD_TClockConfiguration ClockConfiguration)
 184:../Generated_Code/PE_LDD.c **** {
 184              		.loc 1 184 0
 185              		.cfi_startproc
 186 0000 80B5     		push	{r7, lr}
 187              	.LCFI5:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 82B0     		sub	sp, sp, #8
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 16
 194 0004 00AF     		add	r7, sp, #0
 195              	.LCFI7:
 196              		.cfi_def_cfa_register 7
 197 0006 021C     		mov	r2, r0
 198 0008 FB1D     		add	r3, r7, #7
 199 000a 1A70     		strb	r2, [r3]
 185:../Generated_Code/PE_LDD.c ****   (void)ClockConfiguration;            /*!< Parameter is not used, suppress unused argument warning
 186:../Generated_Code/PE_LDD.c ****   /* Just one clock configuration defined in CPU component. */
 187:../Generated_Code/PE_LDD.c **** }
 200              		.loc 1 187 0
 201 000c BD46     		mov	sp, r7
 202 000e 02B0     		add	sp, sp, #8
 203              		@ sp needed for prologue
 204 0010 80BD     		pop	{r7, pc}
 205              		.cfi_endproc
 206              	.LFE2:
 208 0012 C046     		.text
 209              	.Letext0:
 210              		.file 2 "D:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 211              		.file 3 "../Generated_Code/PE_Types.h"
 212              		.file 4 "../Generated_Code/Cpu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 PE_LDD.c
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:22     .bss.PE_LDD_DeviceDataList:00000000 PE_LDD_DeviceDataList
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:19     .bss.PE_LDD_DeviceDataList:00000000 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:29     .rodata.PE_CpuClockConfigurations:00000000 PE_CpuClockConfigurations
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:26     .rodata.PE_CpuClockConfigurations:00000000 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:41     .text.PE_FillMemory:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:46     .text.PE_FillMemory:00000000 PE_FillMemory
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:91     .text.PE_PeripheralUsed:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:96     .text.PE_PeripheralUsed:00000000 PE_PeripheralUsed
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:167    .text.PE_PeripheralUsed:00000058 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:177    .text.LDD_SetClockConfiguration:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccDi6ieQ.s:182    .text.LDD_SetClockConfiguration:00000000 LDD_SetClockConfiguration
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

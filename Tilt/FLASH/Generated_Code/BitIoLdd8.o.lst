   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"BitIoLdd8.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	4
  23              		.section	.text.BitIoLdd8_Init,"ax",%progbits
  24              		.align	2
  25              		.global	BitIoLdd8_Init
  26              		.code	16
  27              		.thumb_func
  29              	BitIoLdd8_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/BitIoLdd8.c"
   1:../Generated_Code/BitIoLdd8.c **** /* ###################################################################
   2:../Generated_Code/BitIoLdd8.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/BitIoLdd8.c **** **     Filename    : BitIoLdd8.c
   4:../Generated_Code/BitIoLdd8.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/BitIoLdd8.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/BitIoLdd8.c **** **     Component   : BitIO_LDD
   7:../Generated_Code/BitIoLdd8.c **** **     Version     : Component 01.033, Driver 01.03, CPU db: 3.00.000
   8:../Generated_Code/BitIoLdd8.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/BitIoLdd8.c **** **     Date/Time   : 2019-04-17, 20:22, # CodeGen: 69
  10:../Generated_Code/BitIoLdd8.c **** **     Abstract    :
  11:../Generated_Code/BitIoLdd8.c **** **         The HAL BitIO component provides a low level API for unified
  12:../Generated_Code/BitIoLdd8.c **** **         access to general purpose digital input/output pins across
  13:../Generated_Code/BitIoLdd8.c **** **         various device designs.
  14:../Generated_Code/BitIoLdd8.c **** **
  15:../Generated_Code/BitIoLdd8.c **** **         RTOS drivers using HAL BitIO API are simpler and more
  16:../Generated_Code/BitIoLdd8.c **** **         portable to various microprocessors.
  17:../Generated_Code/BitIoLdd8.c **** **     Settings    :
  18:../Generated_Code/BitIoLdd8.c **** **          Component name                                 : BitIoLdd8
  19:../Generated_Code/BitIoLdd8.c **** **          Pin for I/O                                    : PTE2/SPI1_SCK
  20:../Generated_Code/BitIoLdd8.c **** **          Pin signal                                     : 
  21:../Generated_Code/BitIoLdd8.c **** **          Direction                                      : Input/Output
  22:../Generated_Code/BitIoLdd8.c **** **          Initialization                                 : 
  23:../Generated_Code/BitIoLdd8.c **** **            Init. direction                              : Input
  24:../Generated_Code/BitIoLdd8.c **** **            Init. value                                  : 0
  25:../Generated_Code/BitIoLdd8.c **** **            Auto initialization                          : yes
  26:../Generated_Code/BitIoLdd8.c **** **          Safe mode                                      : yes
  27:../Generated_Code/BitIoLdd8.c **** **     Contents    :
  28:../Generated_Code/BitIoLdd8.c **** **         Init   - LDD_TDeviceData* BitIoLdd8_Init(LDD_TUserData *UserDataPtr);
  29:../Generated_Code/BitIoLdd8.c **** **         SetDir - void BitIoLdd8_SetDir(LDD_TDeviceData *DeviceDataPtr, bool Dir);
  30:../Generated_Code/BitIoLdd8.c **** **         GetVal - bool BitIoLdd8_GetVal(LDD_TDeviceData *DeviceDataPtr);
  31:../Generated_Code/BitIoLdd8.c **** **         PutVal - void BitIoLdd8_PutVal(LDD_TDeviceData *DeviceDataPtr, bool Val);
  32:../Generated_Code/BitIoLdd8.c **** **         ClrVal - void BitIoLdd8_ClrVal(LDD_TDeviceData *DeviceDataPtr);
  33:../Generated_Code/BitIoLdd8.c **** **         SetVal - void BitIoLdd8_SetVal(LDD_TDeviceData *DeviceDataPtr);
  34:../Generated_Code/BitIoLdd8.c **** **
  35:../Generated_Code/BitIoLdd8.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  36:../Generated_Code/BitIoLdd8.c **** **     All Rights Reserved.
  37:../Generated_Code/BitIoLdd8.c **** **     
  38:../Generated_Code/BitIoLdd8.c **** **     Redistribution and use in source and binary forms, with or without modification,
  39:../Generated_Code/BitIoLdd8.c **** **     are permitted provided that the following conditions are met:
  40:../Generated_Code/BitIoLdd8.c **** **     
  41:../Generated_Code/BitIoLdd8.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  42:../Generated_Code/BitIoLdd8.c **** **       of conditions and the following disclaimer.
  43:../Generated_Code/BitIoLdd8.c **** **     
  44:../Generated_Code/BitIoLdd8.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  45:../Generated_Code/BitIoLdd8.c **** **       list of conditions and the following disclaimer in the documentation and/or
  46:../Generated_Code/BitIoLdd8.c **** **       other materials provided with the distribution.
  47:../Generated_Code/BitIoLdd8.c **** **     
  48:../Generated_Code/BitIoLdd8.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  49:../Generated_Code/BitIoLdd8.c **** **       contributors may be used to endorse or promote products derived from this
  50:../Generated_Code/BitIoLdd8.c **** **       software without specific prior written permission.
  51:../Generated_Code/BitIoLdd8.c **** **     
  52:../Generated_Code/BitIoLdd8.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  53:../Generated_Code/BitIoLdd8.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  54:../Generated_Code/BitIoLdd8.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  55:../Generated_Code/BitIoLdd8.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  56:../Generated_Code/BitIoLdd8.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  57:../Generated_Code/BitIoLdd8.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  58:../Generated_Code/BitIoLdd8.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  59:../Generated_Code/BitIoLdd8.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  60:../Generated_Code/BitIoLdd8.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  61:../Generated_Code/BitIoLdd8.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  62:../Generated_Code/BitIoLdd8.c **** **     
  63:../Generated_Code/BitIoLdd8.c **** **     http: www.freescale.com
  64:../Generated_Code/BitIoLdd8.c **** **     mail: support@freescale.com
  65:../Generated_Code/BitIoLdd8.c **** ** ###################################################################*/
  66:../Generated_Code/BitIoLdd8.c **** /*!
  67:../Generated_Code/BitIoLdd8.c **** ** @file BitIoLdd8.c
  68:../Generated_Code/BitIoLdd8.c **** ** @version 01.03
  69:../Generated_Code/BitIoLdd8.c **** ** @brief
  70:../Generated_Code/BitIoLdd8.c **** **         The HAL BitIO component provides a low level API for unified
  71:../Generated_Code/BitIoLdd8.c **** **         access to general purpose digital input/output pins across
  72:../Generated_Code/BitIoLdd8.c **** **         various device designs.
  73:../Generated_Code/BitIoLdd8.c **** **
  74:../Generated_Code/BitIoLdd8.c **** **         RTOS drivers using HAL BitIO API are simpler and more
  75:../Generated_Code/BitIoLdd8.c **** **         portable to various microprocessors.
  76:../Generated_Code/BitIoLdd8.c **** */         
  77:../Generated_Code/BitIoLdd8.c **** /*!
  78:../Generated_Code/BitIoLdd8.c **** **  @addtogroup BitIoLdd8_module BitIoLdd8 module documentation
  79:../Generated_Code/BitIoLdd8.c **** **  @{
  80:../Generated_Code/BitIoLdd8.c **** */         
  81:../Generated_Code/BitIoLdd8.c **** 
  82:../Generated_Code/BitIoLdd8.c **** /* MODULE BitIoLdd8. */
  83:../Generated_Code/BitIoLdd8.c **** 
  84:../Generated_Code/BitIoLdd8.c **** /* {Default RTOS Adapter} No RTOS includes */
  85:../Generated_Code/BitIoLdd8.c **** #include "BitIoLdd8.h"
  86:../Generated_Code/BitIoLdd8.c **** 
  87:../Generated_Code/BitIoLdd8.c **** #ifdef __cplusplus
  88:../Generated_Code/BitIoLdd8.c **** extern "C" {
  89:../Generated_Code/BitIoLdd8.c **** #endif 
  90:../Generated_Code/BitIoLdd8.c **** 
  91:../Generated_Code/BitIoLdd8.c **** typedef struct {
  92:../Generated_Code/BitIoLdd8.c ****   LDD_TUserData *UserDataPtr;          /* Pointer to user data */
  93:../Generated_Code/BitIoLdd8.c **** } BitIoLdd8_TDeviceData;               /* Device data structure type */
  94:../Generated_Code/BitIoLdd8.c **** 
  95:../Generated_Code/BitIoLdd8.c **** typedef BitIoLdd8_TDeviceData *BitIoLdd8_TDeviceDataPtr ; /* Pointer to the device data structure. 
  96:../Generated_Code/BitIoLdd8.c **** 
  97:../Generated_Code/BitIoLdd8.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  98:../Generated_Code/BitIoLdd8.c **** static BitIoLdd8_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  99:../Generated_Code/BitIoLdd8.c **** /*
 100:../Generated_Code/BitIoLdd8.c **** ** ===================================================================
 101:../Generated_Code/BitIoLdd8.c **** **     Method      :  BitIoLdd8_Init (component BitIO_LDD)
 102:../Generated_Code/BitIoLdd8.c **** */
 103:../Generated_Code/BitIoLdd8.c **** /*!
 104:../Generated_Code/BitIoLdd8.c **** **     @brief
 105:../Generated_Code/BitIoLdd8.c **** **         Initializes the device. Allocates memory for the device data
 106:../Generated_Code/BitIoLdd8.c **** **         structure, allocates interrupt vectors and sets interrupt
 107:../Generated_Code/BitIoLdd8.c **** **         priority, sets pin routing, sets timing, etc. If the "Enable
 108:../Generated_Code/BitIoLdd8.c **** **         in init. code" is set to "yes" value then the device is also
 109:../Generated_Code/BitIoLdd8.c **** **         enabled(see the description of the Enable() method). In this
 110:../Generated_Code/BitIoLdd8.c **** **         case the Enable() method is not necessary and needn't to be
 111:../Generated_Code/BitIoLdd8.c **** **         generated. 
 112:../Generated_Code/BitIoLdd8.c **** **     @param
 113:../Generated_Code/BitIoLdd8.c **** **         UserDataPtr     - Pointer to the user or
 114:../Generated_Code/BitIoLdd8.c **** **                           RTOS specific data. This pointer will be
 115:../Generated_Code/BitIoLdd8.c **** **                           passed as an event or callback parameter.
 116:../Generated_Code/BitIoLdd8.c **** **     @return
 117:../Generated_Code/BitIoLdd8.c **** **                         - Pointer to the dynamically allocated private
 118:../Generated_Code/BitIoLdd8.c **** **                           structure or NULL if there was an error.
 119:../Generated_Code/BitIoLdd8.c **** */
 120:../Generated_Code/BitIoLdd8.c **** /* ===================================================================*/
 121:../Generated_Code/BitIoLdd8.c **** LDD_TDeviceData* BitIoLdd8_Init(LDD_TUserData *UserDataPtr)
 122:../Generated_Code/BitIoLdd8.c **** {
  32              		.loc 1 122 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 123:../Generated_Code/BitIoLdd8.c ****   /* Allocate device structure */
 124:../Generated_Code/BitIoLdd8.c ****   BitIoLdd8_TDeviceDataPtr DeviceDataPrv;
 125:../Generated_Code/BitIoLdd8.c **** 
 126:../Generated_Code/BitIoLdd8.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 127:../Generated_Code/BitIoLdd8.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 127 0
  47 0008 104B     		ldr	r3, .L3
  48 000a FB60     		str	r3, [r7, #12]
 128:../Generated_Code/BitIoLdd8.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  49              		.loc 1 128 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 7A68     		ldr	r2, [r7, #4]
  52 0010 1A60     		str	r2, [r3]
 129:../Generated_Code/BitIoLdd8.c ****   /* Configure pin as input */
 130:../Generated_Code/BitIoLdd8.c ****   /* GPIOE_PDDR: PDD&=~4 */
 131:../Generated_Code/BitIoLdd8.c ****   GPIOE_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x04));
  53              		.loc 1 131 0
  54 0012 0F4B     		ldr	r3, .L3+4
  55 0014 0E4A     		ldr	r2, .L3+4
  56 0016 5269     		ldr	r2, [r2, #20]
  57 0018 0421     		mov	r1, #4
  58 001a 8A43     		bic	r2, r1
  59 001c 5A61     		str	r2, [r3, #20]
 132:../Generated_Code/BitIoLdd8.c ****   /* Set initialization value */
 133:../Generated_Code/BitIoLdd8.c ****   /* GPIOE_PDOR: PDO&=~4 */
 134:../Generated_Code/BitIoLdd8.c ****   GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x04));
  60              		.loc 1 134 0
  61 001e 0C4B     		ldr	r3, .L3+4
  62 0020 0B4A     		ldr	r2, .L3+4
  63 0022 1268     		ldr	r2, [r2]
  64 0024 0421     		mov	r1, #4
  65 0026 8A43     		bic	r2, r1
  66 0028 1A60     		str	r2, [r3]
 135:../Generated_Code/BitIoLdd8.c ****   /* Initialization of Port Control register */
 136:../Generated_Code/BitIoLdd8.c ****   /* PORTE_PCR2: ISF=0,MUX=1 */
 137:../Generated_Code/BitIoLdd8.c ****   PORTE_PCR2 = (uint32_t)((PORTE_PCR2 & (uint32_t)~(uint32_t)(
  67              		.loc 1 137 0
  68 002a 0A4B     		ldr	r3, .L3+8
  69 002c 094A     		ldr	r2, .L3+8
  70 002e 9168     		ldr	r1, [r2, #8]
  71 0030 094A     		ldr	r2, .L3+12
  72 0032 0A40     		and	r2, r1
  73 0034 8021     		mov	r1, #128
  74 0036 4900     		lsl	r1, r1, #1
  75 0038 0A43     		orr	r2, r1
  76 003a 9A60     		str	r2, [r3, #8]
 138:../Generated_Code/BitIoLdd8.c ****                 PORT_PCR_ISF_MASK |
 139:../Generated_Code/BitIoLdd8.c ****                 PORT_PCR_MUX(0x06)
 140:../Generated_Code/BitIoLdd8.c ****                )) | (uint32_t)(
 141:../Generated_Code/BitIoLdd8.c ****                 PORT_PCR_MUX(0x01)
 142:../Generated_Code/BitIoLdd8.c ****                ));
 143:../Generated_Code/BitIoLdd8.c ****   /* Registration of the device structure */
 144:../Generated_Code/BitIoLdd8.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd8_ID,DeviceDataPrv);
  77              		.loc 1 144 0
  78 003c 074B     		ldr	r3, .L3+16
  79 003e FA68     		ldr	r2, [r7, #12]
  80 0040 5A62     		str	r2, [r3, #36]
 145:../Generated_Code/BitIoLdd8.c ****   return ((LDD_TDeviceData *)DeviceDataPrv);
  81              		.loc 1 145 0
  82 0042 FB68     		ldr	r3, [r7, #12]
 146:../Generated_Code/BitIoLdd8.c **** }
  83              		.loc 1 146 0
  84 0044 181C     		mov	r0, r3
  85 0046 BD46     		mov	sp, r7
  86 0048 04B0     		add	sp, sp, #16
  87              		@ sp needed for prologue
  88 004a 80BD     		pop	{r7, pc}
  89              	.L4:
  90              		.align	2
  91              	.L3:
  92 004c 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
  93 0050 00F10F40 		.word	1074786560
  94 0054 00D00440 		.word	1074057216
  95 0058 FFF8FFFE 		.word	-16779009
  96 005c 00000000 		.word	PE_LDD_DeviceDataList
  97              		.cfi_endproc
  98              	.LFE0:
 100              		.section	.text.BitIoLdd8_SetDir,"ax",%progbits
 101              		.align	2
 102              		.global	BitIoLdd8_SetDir
 103              		.code	16
 104              		.thumb_func
 106              	BitIoLdd8_SetDir:
 107              	.LFB1:
 147:../Generated_Code/BitIoLdd8.c **** /*
 148:../Generated_Code/BitIoLdd8.c **** ** ===================================================================
 149:../Generated_Code/BitIoLdd8.c **** **     Method      :  BitIoLdd8_SetDir (component BitIO_LDD)
 150:../Generated_Code/BitIoLdd8.c **** */
 151:../Generated_Code/BitIoLdd8.c **** /*!
 152:../Generated_Code/BitIoLdd8.c **** **     @brief
 153:../Generated_Code/BitIoLdd8.c **** **         Sets a pin direction (available only if the direction =
 154:../Generated_Code/BitIoLdd8.c **** **         _[input/output]_).
 155:../Generated_Code/BitIoLdd8.c **** **     @param
 156:../Generated_Code/BitIoLdd8.c **** **         DeviceDataPtr   - Device data structure
 157:../Generated_Code/BitIoLdd8.c **** **                           pointer returned by <Init> method.
 158:../Generated_Code/BitIoLdd8.c **** **     @param
 159:../Generated_Code/BitIoLdd8.c **** **         Dir             - Direction to set. Possible values:
 160:../Generated_Code/BitIoLdd8.c **** **                           <false> - Input
 161:../Generated_Code/BitIoLdd8.c **** **                           <true> - Output
 162:../Generated_Code/BitIoLdd8.c **** */
 163:../Generated_Code/BitIoLdd8.c **** /* ===================================================================*/
 164:../Generated_Code/BitIoLdd8.c **** void BitIoLdd8_SetDir(LDD_TDeviceData *DeviceDataPtr, bool Dir)
 165:../Generated_Code/BitIoLdd8.c **** {
 108              		.loc 1 165 0
 109              		.cfi_startproc
 110 0000 80B5     		push	{r7, lr}
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 82B0     		sub	sp, sp, #8
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 16
 118 0004 00AF     		add	r7, sp, #0
 119              	.LCFI5:
 120              		.cfi_def_cfa_register 7
 121 0006 7860     		str	r0, [r7, #4]
 122 0008 0A1C     		mov	r2, r1
 123 000a FB1C     		add	r3, r7, #3
 124 000c 1A70     		strb	r2, [r3]
 166:../Generated_Code/BitIoLdd8.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 167:../Generated_Code/BitIoLdd8.c ****   if (Dir) {
 125              		.loc 1 167 0
 126 000e FB1C     		add	r3, r7, #3
 127 0010 1B78     		ldrb	r3, [r3]
 128 0012 002B     		cmp	r3, #0
 129 0014 06D0     		beq	.L6
 168:../Generated_Code/BitIoLdd8.c ****     /* Output */
 169:../Generated_Code/BitIoLdd8.c ****     GPIO_PDD_SetPortOutputDirectionMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
 130              		.loc 1 169 0
 131 0016 084B     		ldr	r3, .L8
 132 0018 074A     		ldr	r2, .L8
 133 001a 5269     		ldr	r2, [r2, #20]
 134 001c 0421     		mov	r1, #4
 135 001e 0A43     		orr	r2, r1
 136 0020 5A61     		str	r2, [r3, #20]
 137 0022 05E0     		b	.L5
 138              	.L6:
 170:../Generated_Code/BitIoLdd8.c ****   } else {
 171:../Generated_Code/BitIoLdd8.c ****     /* Input */
 172:../Generated_Code/BitIoLdd8.c ****     GPIO_PDD_SetPortInputDirectionMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
 139              		.loc 1 172 0
 140 0024 044B     		ldr	r3, .L8
 141 0026 044A     		ldr	r2, .L8
 142 0028 5269     		ldr	r2, [r2, #20]
 143 002a 0421     		mov	r1, #4
 144 002c 8A43     		bic	r2, r1
 145 002e 5A61     		str	r2, [r3, #20]
 146              	.L5:
 173:../Generated_Code/BitIoLdd8.c ****   }
 174:../Generated_Code/BitIoLdd8.c **** }
 147              		.loc 1 174 0
 148 0030 BD46     		mov	sp, r7
 149 0032 02B0     		add	sp, sp, #8
 150              		@ sp needed for prologue
 151 0034 80BD     		pop	{r7, pc}
 152              	.L9:
 153 0036 C046     		.align	2
 154              	.L8:
 155 0038 00F10FF8 		.word	-133172992
 156              		.cfi_endproc
 157              	.LFE1:
 159              		.section	.text.BitIoLdd8_GetVal,"ax",%progbits
 160              		.align	2
 161              		.global	BitIoLdd8_GetVal
 162              		.code	16
 163              		.thumb_func
 165              	BitIoLdd8_GetVal:
 166              	.LFB2:
 175:../Generated_Code/BitIoLdd8.c **** 
 176:../Generated_Code/BitIoLdd8.c **** /*
 177:../Generated_Code/BitIoLdd8.c **** ** ===================================================================
 178:../Generated_Code/BitIoLdd8.c **** **     Method      :  BitIoLdd8_GetVal (component BitIO_LDD)
 179:../Generated_Code/BitIoLdd8.c **** */
 180:../Generated_Code/BitIoLdd8.c **** /*!
 181:../Generated_Code/BitIoLdd8.c **** **     @brief
 182:../Generated_Code/BitIoLdd8.c **** **         Returns the input/output value. If the direction is [input]
 183:../Generated_Code/BitIoLdd8.c **** **         then the input value of the pin is read and returned. If the
 184:../Generated_Code/BitIoLdd8.c **** **         direction is [output] then the last written value is read
 185:../Generated_Code/BitIoLdd8.c **** **         and returned (see <Safe mode> property for limitations).
 186:../Generated_Code/BitIoLdd8.c **** **         This method cannot be disabled if direction is [input].
 187:../Generated_Code/BitIoLdd8.c **** **     @param
 188:../Generated_Code/BitIoLdd8.c **** **         DeviceDataPtr   - Device data structure
 189:../Generated_Code/BitIoLdd8.c **** **                           pointer returned by <Init> method.
 190:../Generated_Code/BitIoLdd8.c **** **     @return
 191:../Generated_Code/BitIoLdd8.c **** **                         - Input or output value. Possible values:
 192:../Generated_Code/BitIoLdd8.c **** **                           <false> - logical "0" (Low level)
 193:../Generated_Code/BitIoLdd8.c **** **                           <true> - logical "1" (High level)
 194:../Generated_Code/BitIoLdd8.c **** */
 195:../Generated_Code/BitIoLdd8.c **** /* ===================================================================*/
 196:../Generated_Code/BitIoLdd8.c **** bool BitIoLdd8_GetVal(LDD_TDeviceData *DeviceDataPtr)
 197:../Generated_Code/BitIoLdd8.c **** {
 167              		.loc 1 197 0
 168              		.cfi_startproc
 169 0000 80B5     		push	{r7, lr}
 170              	.LCFI6:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 84B0     		sub	sp, sp, #16
 175              	.LCFI7:
 176              		.cfi_def_cfa_offset 24
 177 0004 00AF     		add	r7, sp, #0
 178              	.LCFI8:
 179              		.cfi_def_cfa_register 7
 180 0006 7860     		str	r0, [r7, #4]
 198:../Generated_Code/BitIoLdd8.c ****   uint32_t PortData;                   /* Port data masked according to the bit used */
 199:../Generated_Code/BitIoLdd8.c **** 
 200:../Generated_Code/BitIoLdd8.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 201:../Generated_Code/BitIoLdd8.c ****   if ((GPIO_PDD_GetPortDirection(BitIoLdd8_MODULE_BASE_ADDRESS) & BitIoLdd8_PORT_MASK) == 0U) {
 181              		.loc 1 201 0
 182 0008 0B4B     		ldr	r3, .L14
 183 000a 5A69     		ldr	r2, [r3, #20]
 184 000c 0423     		mov	r3, #4
 185 000e 1340     		and	r3, r2
 186 0010 05D1     		bne	.L11
 202:../Generated_Code/BitIoLdd8.c ****     /* Port is configured as input */
 203:../Generated_Code/BitIoLdd8.c ****     PortData = GPIO_PDD_GetPortDataInput(BitIoLdd8_MODULE_BASE_ADDRESS) & BitIoLdd8_PORT_MASK;
 187              		.loc 1 203 0
 188 0012 094B     		ldr	r3, .L14
 189 0014 1A69     		ldr	r2, [r3, #16]
 190 0016 0423     		mov	r3, #4
 191 0018 1340     		and	r3, r2
 192 001a FB60     		str	r3, [r7, #12]
 193 001c 04E0     		b	.L12
 194              	.L11:
 204:../Generated_Code/BitIoLdd8.c ****   } else {
 205:../Generated_Code/BitIoLdd8.c ****     /* Port is configured as output */
 206:../Generated_Code/BitIoLdd8.c ****     PortData = GPIO_PDD_GetPortDataOutput(BitIoLdd8_MODULE_BASE_ADDRESS) & BitIoLdd8_PORT_MASK;
 195              		.loc 1 206 0
 196 001e 064B     		ldr	r3, .L14
 197 0020 1A68     		ldr	r2, [r3]
 198 0022 0423     		mov	r3, #4
 199 0024 1340     		and	r3, r2
 200 0026 FB60     		str	r3, [r7, #12]
 201              	.L12:
 207:../Generated_Code/BitIoLdd8.c ****   }
 208:../Generated_Code/BitIoLdd8.c ****   return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
 202              		.loc 1 208 0
 203 0028 FB68     		ldr	r3, [r7, #12]
 204 002a 5A1E     		sub	r2, r3, #1
 205 002c 9341     		sbc	r3, r3, r2
 206 002e DBB2     		uxtb	r3, r3
 209:../Generated_Code/BitIoLdd8.c **** }
 207              		.loc 1 209 0
 208 0030 181C     		mov	r0, r3
 209 0032 BD46     		mov	sp, r7
 210 0034 04B0     		add	sp, sp, #16
 211              		@ sp needed for prologue
 212 0036 80BD     		pop	{r7, pc}
 213              	.L15:
 214              		.align	2
 215              	.L14:
 216 0038 00F10FF8 		.word	-133172992
 217              		.cfi_endproc
 218              	.LFE2:
 220              		.section	.text.BitIoLdd8_PutVal,"ax",%progbits
 221              		.align	2
 222              		.global	BitIoLdd8_PutVal
 223              		.code	16
 224              		.thumb_func
 226              	BitIoLdd8_PutVal:
 227              	.LFB3:
 210:../Generated_Code/BitIoLdd8.c **** 
 211:../Generated_Code/BitIoLdd8.c **** /*
 212:../Generated_Code/BitIoLdd8.c **** ** ===================================================================
 213:../Generated_Code/BitIoLdd8.c **** **     Method      :  BitIoLdd8_PutVal (component BitIO_LDD)
 214:../Generated_Code/BitIoLdd8.c **** */
 215:../Generated_Code/BitIoLdd8.c **** /*!
 216:../Generated_Code/BitIoLdd8.c **** **     @brief
 217:../Generated_Code/BitIoLdd8.c **** **         The specified output value is set. If the direction is <b>
 218:../Generated_Code/BitIoLdd8.c **** **         input</b>, the component saves the value to a memory or a
 219:../Generated_Code/BitIoLdd8.c **** **         register and this value will be written to the pin after
 220:../Generated_Code/BitIoLdd8.c **** **         switching to the output mode (using <tt>SetDir(TRUE)</tt>;
 221:../Generated_Code/BitIoLdd8.c **** **         see <a href="BitIOProperties.html#SafeMode">Safe mode</a>
 222:../Generated_Code/BitIoLdd8.c **** **         property for limitations). If the direction is <b>output</b>,
 223:../Generated_Code/BitIoLdd8.c **** **         it writes the value to the pin. (Method is available only if
 224:../Generated_Code/BitIoLdd8.c **** **         the direction = <u><tt>output</tt></u> or <u><tt>
 225:../Generated_Code/BitIoLdd8.c **** **         input/output</tt></u>).
 226:../Generated_Code/BitIoLdd8.c **** **     @param
 227:../Generated_Code/BitIoLdd8.c **** **         DeviceDataPtr   - Device data structure
 228:../Generated_Code/BitIoLdd8.c **** **                           pointer returned by <Init> method.
 229:../Generated_Code/BitIoLdd8.c **** **     @param
 230:../Generated_Code/BitIoLdd8.c **** **         Val             - Output value. Possible values:
 231:../Generated_Code/BitIoLdd8.c **** **                           <false> - logical "0" (Low level)
 232:../Generated_Code/BitIoLdd8.c **** **                           <true> - logical "1" (High level)
 233:../Generated_Code/BitIoLdd8.c **** */
 234:../Generated_Code/BitIoLdd8.c **** /* ===================================================================*/
 235:../Generated_Code/BitIoLdd8.c **** void BitIoLdd8_PutVal(LDD_TDeviceData *DeviceDataPtr, bool Val)
 236:../Generated_Code/BitIoLdd8.c **** {
 228              		.loc 1 236 0
 229              		.cfi_startproc
 230 0000 80B5     		push	{r7, lr}
 231              	.LCFI9:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 82B0     		sub	sp, sp, #8
 236              	.LCFI10:
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI11:
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 242 0008 0A1C     		mov	r2, r1
 243 000a FB1C     		add	r3, r7, #3
 244 000c 1A70     		strb	r2, [r3]
 237:../Generated_Code/BitIoLdd8.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 238:../Generated_Code/BitIoLdd8.c ****   if (Val) {
 245              		.loc 1 238 0
 246 000e FB1C     		add	r3, r7, #3
 247 0010 1B78     		ldrb	r3, [r3]
 248 0012 002B     		cmp	r3, #0
 249 0014 03D0     		beq	.L17
 239:../Generated_Code/BitIoLdd8.c ****     GPIO_PDD_SetPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
 250              		.loc 1 239 0
 251 0016 054B     		ldr	r3, .L19
 252 0018 0422     		mov	r2, #4
 253 001a 5A60     		str	r2, [r3, #4]
 254 001c 02E0     		b	.L16
 255              	.L17:
 240:../Generated_Code/BitIoLdd8.c ****   } else { /* !Val */
 241:../Generated_Code/BitIoLdd8.c ****     GPIO_PDD_ClearPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
 256              		.loc 1 241 0
 257 001e 034B     		ldr	r3, .L19
 258 0020 0422     		mov	r2, #4
 259 0022 9A60     		str	r2, [r3, #8]
 260              	.L16:
 242:../Generated_Code/BitIoLdd8.c ****   } /* !Val */
 243:../Generated_Code/BitIoLdd8.c **** }
 261              		.loc 1 243 0
 262 0024 BD46     		mov	sp, r7
 263 0026 02B0     		add	sp, sp, #8
 264              		@ sp needed for prologue
 265 0028 80BD     		pop	{r7, pc}
 266              	.L20:
 267 002a C046     		.align	2
 268              	.L19:
 269 002c 00F10FF8 		.word	-133172992
 270              		.cfi_endproc
 271              	.LFE3:
 273              		.section	.text.BitIoLdd8_ClrVal,"ax",%progbits
 274              		.align	2
 275              		.global	BitIoLdd8_ClrVal
 276              		.code	16
 277              		.thumb_func
 279              	BitIoLdd8_ClrVal:
 280              	.LFB4:
 244:../Generated_Code/BitIoLdd8.c **** 
 245:../Generated_Code/BitIoLdd8.c **** /*
 246:../Generated_Code/BitIoLdd8.c **** ** ===================================================================
 247:../Generated_Code/BitIoLdd8.c **** **     Method      :  BitIoLdd8_ClrVal (component BitIO_LDD)
 248:../Generated_Code/BitIoLdd8.c **** */
 249:../Generated_Code/BitIoLdd8.c **** /*!
 250:../Generated_Code/BitIoLdd8.c **** **     @brief
 251:../Generated_Code/BitIoLdd8.c **** **         Clears (set to zero) the output value. It is equivalent to
 252:../Generated_Code/BitIoLdd8.c **** **         the [PutVal(FALSE)]. This method is available only if the
 253:../Generated_Code/BitIoLdd8.c **** **         direction = _[output]_ or _[input/output]_.
 254:../Generated_Code/BitIoLdd8.c **** **     @param
 255:../Generated_Code/BitIoLdd8.c **** **         DeviceDataPtr   - Pointer to device data
 256:../Generated_Code/BitIoLdd8.c **** **                           structure returned by <Init> method.
 257:../Generated_Code/BitIoLdd8.c **** */
 258:../Generated_Code/BitIoLdd8.c **** /* ===================================================================*/
 259:../Generated_Code/BitIoLdd8.c **** void BitIoLdd8_ClrVal(LDD_TDeviceData *DeviceDataPtr)
 260:../Generated_Code/BitIoLdd8.c **** {
 281              		.loc 1 260 0
 282              		.cfi_startproc
 283 0000 80B5     		push	{r7, lr}
 284              	.LCFI12:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              	.LCFI13:
 290              		.cfi_def_cfa_offset 16
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI14:
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 261:../Generated_Code/BitIoLdd8.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 262:../Generated_Code/BitIoLdd8.c ****   GPIO_PDD_ClearPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
 295              		.loc 1 262 0
 296 0008 024B     		ldr	r3, .L22
 297 000a 0422     		mov	r2, #4
 298 000c 9A60     		str	r2, [r3, #8]
 263:../Generated_Code/BitIoLdd8.c **** }
 299              		.loc 1 263 0
 300 000e BD46     		mov	sp, r7
 301 0010 02B0     		add	sp, sp, #8
 302              		@ sp needed for prologue
 303 0012 80BD     		pop	{r7, pc}
 304              	.L23:
 305              		.align	2
 306              	.L22:
 307 0014 00F10FF8 		.word	-133172992
 308              		.cfi_endproc
 309              	.LFE4:
 311              		.section	.text.BitIoLdd8_SetVal,"ax",%progbits
 312              		.align	2
 313              		.global	BitIoLdd8_SetVal
 314              		.code	16
 315              		.thumb_func
 317              	BitIoLdd8_SetVal:
 318              	.LFB5:
 264:../Generated_Code/BitIoLdd8.c **** 
 265:../Generated_Code/BitIoLdd8.c **** /*
 266:../Generated_Code/BitIoLdd8.c **** ** ===================================================================
 267:../Generated_Code/BitIoLdd8.c **** **     Method      :  BitIoLdd8_SetVal (component BitIO_LDD)
 268:../Generated_Code/BitIoLdd8.c **** */
 269:../Generated_Code/BitIoLdd8.c **** /*!
 270:../Generated_Code/BitIoLdd8.c **** **     @brief
 271:../Generated_Code/BitIoLdd8.c **** **         Sets (to one) the output value. It is equivalent to the
 272:../Generated_Code/BitIoLdd8.c **** **         [PutVal(TRUE)]. This method is available only if the
 273:../Generated_Code/BitIoLdd8.c **** **         direction = _[output]_ or _[input/output]_.
 274:../Generated_Code/BitIoLdd8.c **** **     @param
 275:../Generated_Code/BitIoLdd8.c **** **         DeviceDataPtr   - Pointer to device data
 276:../Generated_Code/BitIoLdd8.c **** **                           structure returned by <Init> method.
 277:../Generated_Code/BitIoLdd8.c **** */
 278:../Generated_Code/BitIoLdd8.c **** /* ===================================================================*/
 279:../Generated_Code/BitIoLdd8.c **** void BitIoLdd8_SetVal(LDD_TDeviceData *DeviceDataPtr)
 280:../Generated_Code/BitIoLdd8.c **** {
 319              		.loc 1 280 0
 320              		.cfi_startproc
 321 0000 80B5     		push	{r7, lr}
 322              	.LCFI15:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 82B0     		sub	sp, sp, #8
 327              	.LCFI16:
 328              		.cfi_def_cfa_offset 16
 329 0004 00AF     		add	r7, sp, #0
 330              	.LCFI17:
 331              		.cfi_def_cfa_register 7
 332 0006 7860     		str	r0, [r7, #4]
 281:../Generated_Code/BitIoLdd8.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 282:../Generated_Code/BitIoLdd8.c ****   GPIO_PDD_SetPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
 333              		.loc 1 282 0
 334 0008 024B     		ldr	r3, .L25
 335 000a 0422     		mov	r2, #4
 336 000c 5A60     		str	r2, [r3, #4]
 283:../Generated_Code/BitIoLdd8.c **** }
 337              		.loc 1 283 0
 338 000e BD46     		mov	sp, r7
 339 0010 02B0     		add	sp, sp, #8
 340              		@ sp needed for prologue
 341 0012 80BD     		pop	{r7, pc}
 342              	.L26:
 343              		.align	2
 344              	.L25:
 345 0014 00F10FF8 		.word	-133172992
 346              		.cfi_endproc
 347              	.LFE5:
 349              		.text
 350              	.Letext0:
 351              		.file 2 "D:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 352              		.file 3 "../Generated_Code/PE_Types.h"
 353              		.file 4 "D:/Freescale/CW MCU v10.7/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 BitIoLdd8.c
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:24     .text.BitIoLdd8_Init:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:29     .text.BitIoLdd8_Init:00000000 BitIoLdd8_Init
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:92     .text.BitIoLdd8_Init:0000004c $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:101    .text.BitIoLdd8_SetDir:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:106    .text.BitIoLdd8_SetDir:00000000 BitIoLdd8_SetDir
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:155    .text.BitIoLdd8_SetDir:00000038 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:160    .text.BitIoLdd8_GetVal:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:165    .text.BitIoLdd8_GetVal:00000000 BitIoLdd8_GetVal
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:216    .text.BitIoLdd8_GetVal:00000038 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:221    .text.BitIoLdd8_PutVal:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:226    .text.BitIoLdd8_PutVal:00000000 BitIoLdd8_PutVal
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:269    .text.BitIoLdd8_PutVal:0000002c $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:274    .text.BitIoLdd8_ClrVal:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:279    .text.BitIoLdd8_ClrVal:00000000 BitIoLdd8_ClrVal
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:307    .text.BitIoLdd8_ClrVal:00000014 $d
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:312    .text.BitIoLdd8_SetVal:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:317    .text.BitIoLdd8_SetVal:00000000 BitIoLdd8_SetVal
C:\Users\JOSHUA~1\AppData\Local\Temp\ccN1XC2v.s:345    .text.BitIoLdd8_SetVal:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList

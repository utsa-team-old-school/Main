   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Events.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Cpu_OnNMIINT,"ax",%progbits
  18              		.align	2
  19              		.global	Cpu_OnNMIINT
  20              		.code	16
  21              		.thumb_func
  23              	Cpu_OnNMIINT:
  24              	.LFB0:
  25              		.file 1 "../Sources/Events.c"
   1:../Sources/Events.c **** /** ###################################################################
   2:../Sources/Events.c **** **     Filename    : Events.c
   3:../Sources/Events.c **** **     Project     : ProcessorExpert
   4:../Sources/Events.c **** **     Processor   : MKL25Z128VLK4
   5:../Sources/Events.c **** **     Component   : Events
   6:../Sources/Events.c **** **     Version     : Driver 01.00
   7:../Sources/Events.c **** **     Compiler    : GNU C Compiler
   8:../Sources/Events.c **** **     Date/Time   : 2013-01-03, 14:56, # CodeGen: 0
   9:../Sources/Events.c **** **     Abstract    :
  10:../Sources/Events.c **** **         This is user's event module.
  11:../Sources/Events.c **** **         Put your event handler code here.
  12:../Sources/Events.c **** **     Settings    :
  13:../Sources/Events.c **** **     Contents    :
  14:../Sources/Events.c **** **         Cpu_OnNMIINT - void Cpu_OnNMIINT(void);
  15:../Sources/Events.c **** **
  16:../Sources/Events.c **** ** ###################################################################*/
  17:../Sources/Events.c **** /* MODULE Events */
  18:../Sources/Events.c **** 
  19:../Sources/Events.c **** #include "Cpu.h"
  20:../Sources/Events.c **** #include "Events.h"
  21:../Sources/Events.c **** 
  22:../Sources/Events.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  23:../Sources/Events.c **** #include "my.h"
  24:../Sources/Events.c **** 
  25:../Sources/Events.c **** 
  26:../Sources/Events.c **** /*
  27:../Sources/Events.c **** ** ===================================================================
  28:../Sources/Events.c **** **     Event       :  Cpu_OnNMIINT (module Events)
  29:../Sources/Events.c **** **
  30:../Sources/Events.c **** **     Component   :  Cpu [MKL25Z128LK4]
  31:../Sources/Events.c **** **     Description :
  32:../Sources/Events.c **** **         This event is called when the Non maskable interrupt had
  33:../Sources/Events.c **** **         occurred. This event is automatically enabled when the <NMI
  34:../Sources/Events.c **** **         interrrupt> property is set to 'Enabled'.
  35:../Sources/Events.c **** **     Parameters  : None
  36:../Sources/Events.c **** **     Returns     : Nothing
  37:../Sources/Events.c **** ** ===================================================================
  38:../Sources/Events.c **** */
  39:../Sources/Events.c **** void Cpu_OnNMIINT(void)
  40:../Sources/Events.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  41:../Sources/Events.c ****   /* Write your code here ... */
  42:../Sources/Events.c **** }
  36              		.loc 1 42 0
  37 0004 BD46     		mov	sp, r7
  38              		@ sp needed for prologue
  39 0006 80BD     		pop	{r7, pc}
  40              		.cfi_endproc
  41              	.LFE0:
  43              		.section	.text.Cpu_OnHardFault,"ax",%progbits
  44              		.align	2
  45              		.global	Cpu_OnHardFault
  46              		.code	16
  47              		.thumb_func
  49              	Cpu_OnHardFault:
  50              	.LFB1:
  43:../Sources/Events.c **** 
  44:../Sources/Events.c **** /*
  45:../Sources/Events.c **** ** ===================================================================
  46:../Sources/Events.c **** **     Event       :  Cpu_OnHardFault (module Events)
  47:../Sources/Events.c **** **
  48:../Sources/Events.c **** **     Component   :  Cpu [MKL25Z128LK4]
  49:../Sources/Events.c **** **     Description :
  50:../Sources/Events.c **** **         This event is called when the Hard Fault exception had
  51:../Sources/Events.c **** **         occurred. This event is automatically enabled when the <Hard
  52:../Sources/Events.c **** **         Fault> property is set to 'Enabled'.
  53:../Sources/Events.c **** **     Parameters  : None
  54:../Sources/Events.c **** **     Returns     : Nothing
  55:../Sources/Events.c **** ** ===================================================================
  56:../Sources/Events.c **** */
  57:../Sources/Events.c **** void Cpu_OnHardFault(void)
  58:../Sources/Events.c **** {
  51              		.loc 1 58 0
  52              		.cfi_startproc
  53 0000 80B5     		push	{r7, lr}
  54              	.LCFI2:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 00AF     		add	r7, sp, #0
  59              	.LCFI3:
  60              		.cfi_def_cfa_register 7
  59:../Sources/Events.c ****   /* Write your code here ... */
  60:../Sources/Events.c **** }
  61              		.loc 1 60 0
  62 0004 BD46     		mov	sp, r7
  63              		@ sp needed for prologue
  64 0006 80BD     		pop	{r7, pc}
  65              		.cfi_endproc
  66              	.LFE1:
  68              		.section	.text.ADCint,"ax",%progbits
  69              		.align	2
  70              		.global	ADCint
  71              		.code	16
  72              		.thumb_func
  74              	ADCint:
  75              	.LFB2:
  61:../Sources/Events.c **** 
  62:../Sources/Events.c **** /*
  63:../Sources/Events.c **** ** ===================================================================
  64:../Sources/Events.c **** **     Interrupt handler : ADCint
  65:../Sources/Events.c **** **
  66:../Sources/Events.c **** **     Description :
  67:../Sources/Events.c **** **         User interrupt service routine. 
  68:../Sources/Events.c **** **     Parameters  : None
  69:../Sources/Events.c **** **     Returns     : Nothing
  70:../Sources/Events.c **** ** ===================================================================
  71:../Sources/Events.c **** */
  72:../Sources/Events.c **** PE_ISR(ADCint)
  73:../Sources/Events.c **** {
  76              		.loc 1 73 0
  77              		.cfi_startproc
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI4:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI5:
  85              		.cfi_def_cfa_register 7
  74:../Sources/Events.c ****   /* Write your interrupt code here ... */	
  75:../Sources/Events.c **** 	// clear interrupt and flags
  76:../Sources/Events.c **** 	DMA_DSR0 |= DMA_DSR_BCR_DONE_MASK;
  86              		.loc 1 76 0
  87 0004 054A     		ldr	r2, .L4
  88 0006 0549     		ldr	r1, .L4
  89 0008 054B     		ldr	r3, .L4+4
  90 000a CB5C     		ldrb	r3, [r1, r3]
  91 000c D9B2     		uxtb	r1, r3
  92 000e 044B     		ldr	r3, .L4+4
  93 0010 D154     		strb	r1, [r2, r3]
  77:../Sources/Events.c **** 	Measured = TRUE;
  94              		.loc 1 77 0
  95 0012 044B     		ldr	r3, .L4+8
  96 0014 0122     		mov	r2, #1
  97 0016 1A70     		strb	r2, [r3]
  78:../Sources/Events.c **** }
  98              		.loc 1 78 0
  99 0018 BD46     		mov	sp, r7
 100              		@ sp needed for prologue
 101 001a 80BD     		pop	{r7, pc}
 102              	.L5:
 103              		.align	2
 104              	.L4:
 105 001c 00800040 		.word	1073774592
 106 0020 0B010000 		.word	267
 107 0024 00000000 		.word	Measured
 108              		.cfi_endproc
 109              	.LFE2:
 111              		.text
 112              	.Letext0:
 113              		.file 2 "D:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 114              		.file 3 "C:/Users/Joshua Edwards/workspace/KL25_MultiADC_DMA/Generated_Code/PE_Types.h"
 115              		.file 4 "D:/Freescale/CW MCU v10.7/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
 116              		.file 5 "../Sources/my.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Events.c
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:18     .text.Cpu_OnNMIINT:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:23     .text.Cpu_OnNMIINT:00000000 Cpu_OnNMIINT
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:44     .text.Cpu_OnHardFault:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:49     .text.Cpu_OnHardFault:00000000 Cpu_OnHardFault
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:69     .text.ADCint:00000000 $t
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:74     .text.ADCint:00000000 ADCint
C:\Users\JOSHUA~1\AppData\Local\Temp\ccnOWC2v.s:105    .text.ADCint:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Measured
